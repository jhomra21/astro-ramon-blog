---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import WeatherWidget from './WeatherWidget';
import TypewriterEffect from './TypewriterEffect.astro';
---

<header class="sticky top-0 z-50 w-full border-b border-neutral-100 bg-white/80 backdrop-blur-sm">
	<nav class="mx-auto flex h-14 max-w-[1120px] items-center justify-between px-4">
		<a href="/" class="font-mono text-sm text-neutral-700 hover:text-neutral-900">
			<TypewriterEffect text={SITE_TITLE} />
		</a>
		<div class="flex items-center gap-x-4">
			<WeatherWidget client:load />
			<div class="h-4 w-px bg-neutral-200" />
			<div class="flex items-center gap-x-1 font-mono text-sm">
				<HeaderLink href="/">home</HeaderLink>
				<HeaderLink href="/about">about</HeaderLink>
				<HeaderLink href="https://3d-globe-iss-tracker.pages.dev" target="_blank" class="hidden sm:block">iss tracker</HeaderLink>
				<HeaderLink href="https://vidtogifconverter.pages.dev" target="_blank" class="hidden sm:block">video to gif</HeaderLink>
			</div>
			<button 
				id="mobile-menu-button" 
				class="ml-1 flex h-8 w-8 items-center justify-center rounded-md hover:bg-neutral-100 sm:hidden"
				aria-label="Toggle menu"
				aria-expanded="false"
				aria-controls="mobile-menu"
			>
				<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
					<line x1="3" y1="12" x2="21" y2="12"></line>
					<line x1="3" y1="6" x2="21" y2="6"></line>
					<line x1="3" y1="18" x2="21" y2="18"></line>
				</svg>
			</button>
		</div>
	</nav>
	<div 
		id="mobile-menu" 
		class="hidden border-t border-neutral-100 bg-white sm:hidden"
		aria-hidden="true"
	>
		<div class="space-y-1 px-4 py-3">
			<HeaderLink href="https://3d-globe-iss-tracker.pages.dev" target="_blank" class="block py-2">iss tracker</HeaderLink>
			<HeaderLink href="https://vidtogifconverter.pages.dev" target="_blank" class="block py-2">video to gif</HeaderLink>
		</div>
	</div>
</header>

<script>
	const header = document.querySelector('header');
	const mobileMenuButton = document.getElementById('mobile-menu-button');
	const mobileMenu = document.getElementById('mobile-menu');

	// Toggle mobile menu with accessibility
	const toggleMobileMenu = () => {
		const isExpanded = mobileMenuButton?.getAttribute('aria-expanded') === 'true';
		mobileMenuButton?.setAttribute('aria-expanded', (!isExpanded).toString());
		mobileMenu?.setAttribute('aria-hidden', isExpanded.toString());
		mobileMenu?.classList.toggle('hidden');
	};

	mobileMenuButton?.addEventListener('click', toggleMobileMenu);

	// Handle scroll effects
	const handleScroll = () => {
		if (window.scrollY > 0) {
			header?.classList.add('shadow-sm');
		} else {
			header?.classList.remove('shadow-sm');
		}
	};

	window.addEventListener('scroll', handleScroll);

	// Close mobile menu when clicking outside
	document.addEventListener('click', (event) => {
		const target = event.target as HTMLElement;
		if (!target.closest('#mobile-menu') && !target.closest('#mobile-menu-button')) {
			mobileMenuButton?.setAttribute('aria-expanded', 'false');
			mobileMenu?.setAttribute('aria-hidden', 'true');
			mobileMenu?.classList.add('hidden');
		}
	});

	// Close mobile menu when resizing to desktop
	window.addEventListener('resize', () => {
		if (window.innerWidth >= 640) {
			mobileMenuButton?.setAttribute('aria-expanded', 'false');
			mobileMenu?.setAttribute('aria-hidden', 'true');
			mobileMenu?.classList.add('hidden');
		}
	});
</script>
