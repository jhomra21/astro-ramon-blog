---
import { getCollection } from 'astro:content';
import TechBadge from './TechBadge';
import { Image } from 'astro:assets';

interface Props {
    maxProjects?: number;
}

const { maxProjects = 100 } = Astro.props;

// Get all projects with more detailed logging
const projects = (await getCollection('blog', ({ data }) => {
    // More permissive check for isProject
    return data.isProject || false;
}))
    .sort((a, b) => {
        // First sort by projectType - put 'featured' first
        if (a.data.projectType === 'featured' && b.data.projectType !== 'featured') return -1;
        if (a.data.projectType !== 'featured' && b.data.projectType === 'featured') return 1;
        // Then sort by date
        return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
    })
    .slice(0, maxProjects);

const totalProjects = (await getCollection('blog', ({ data }) => data.isProject || false)).length;
const showSeeAll = maxProjects < totalProjects;
---

<div class="space-y-8">
    <div class="flex justify-between items-center">
        <h2 class="section-title">Things I've Built</h2>
        {showSeeAll && (
            <a href="/projects" class="link-hover text-sm font-mono">
                See all projects
                <span class="font-sans ml-1">→</span>
            </a>
        )}
    </div>

    {projects.length === 0 ? (
        <p class="text-zinc-700 dark:text-zinc-300">No projects found.</p>
    ) : (
        <div class="space-y-8">
            {projects.map((project) => (
                <div class="project-card bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 overflow-hidden">
                    <div class="grid grid-cols-1 md:grid-cols-[280px,1fr] h-full">
                        {project.data.heroImage && (
                            <div class="relative overflow-hidden flex items-center justify-center h-full">
                                <a href={`/blog/${project.slug}`} class="block relative w-full h-full">
                                    <div class="relative w-full h-full flex items-center justify-center">
                                        <div class="placeholder absolute inset-0 bg-white/50 dark:bg-zinc-800/50 backdrop-blur-md animate-pulse" />
                                        <Image
                                            src={project.data.heroImage}
                                            alt={`Preview of ${project.data.title}`}
                                            width={1920}
                                            height={1080}
                                            class="project-image opacity-0 w-full h-full object-contain object-center hover:scale-105 transition-all duration-300 relative z-10"
                                            loading="lazy"
                                            format="webp"
                                            quality="high"
                                        />
                                    </div>
                                    <div class="absolute inset-0 bg-gradient-to-r from-black/20 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300 z-20"></div>
                                </a>
                            </div>
                        )}
                        <div class="relative z-10 p-6 flex flex-col h-full">
                            <div class="flex items-center justify-between flex-wrap gap-2 mb-4">
                                <div class="flex items-center gap-2">
                                    <span class="badge bg-zinc-100 dark:bg-zinc-800/80 text-zinc-900 dark:text-zinc-100 border border-zinc-200 dark:border-zinc-700">
                                        {project.data.pubDate.getFullYear()}
                                    </span>
                                </div>
                                {project.data.projectStatus === 'live' && (
                                    <span class="badge bg-zinc-100 dark:bg-zinc-800/80 text-zinc-900 dark:text-zinc-100 border border-zinc-200 dark:border-zinc-700 flex items-center gap-1.5">
                                        <span class="relative flex h-2 w-2">
                                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75"></span>
                                            <span class="relative inline-flex rounded-full h-2 w-2 bg-green-500"></span>
                                        </span>
                                        LIVE
                                    </span>
                                )}
                            </div>
                            <div class="flex-grow flex flex-col min-h-0">
                                <a href={`/blog/${project.slug}`} class="link-hover">
                                    <h2 class="text-2xl font-bold mb-2 tracking-tight line-clamp-2" title={project.data.title}>{project.data.title}</h2>
                                </a>
                                <p class="text-zinc-700 dark:text-zinc-300 mb-4 tracking-tight line-clamp-3" title={project.data.description}>
                                    {project.data.description}
                                </p>
                                <div class="flex flex-wrap gap-2 mb-4">
                                    {project.data.techStack?.map((tech) => (
                                        <TechBadge tech={tech.name} tooltip={tech.description} />
                                    ))}
                                </div>
                                <div class="mt-auto pt-4 flex flex-wrap items-center gap-4 border-t border-zinc-100 dark:border-zinc-700">
                                    {project.data.projectUrl && (
                                        <a href={project.data.projectUrl} target="_blank" class="link-hover inline-flex items-center gap-2">
                                            Live Site
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4">
                                                <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
                                                <polyline points="15 3 21 3 21 9"/>
                                                <line x1="10" y1="14" x2="21" y2="3"/>
                                            </svg>
                                        </a>
                                    )}
                                    {project.data.githubUrl && (
                                        <a href={project.data.githubUrl} target="_blank" class="link-hover inline-flex items-center gap-2">
                                            Git Repo
                                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
                                                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"></path>
                                            </svg>
                                        </a>
                                    )}
                                    <a href={`/blog/${project.slug}`} class="link-hover inline-flex items-center gap-2">
                                        Read more
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4">
                                            <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20"/>
                                        </svg>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            ))}
            
            {showSeeAll && (
                <div class="flex justify-center pt-4">
                    <a href="/projects" class="link-hover inline-flex items-center gap-2 text-sm font-mono">
                        See all projects
                        <span class="font-sans">→</span>
                    </a>
                </div>
            )}
        </div>
    )}
</div>

<style>
    .project-card {
        transition: all 0.2s ease;
        border-left: 4px solid transparent;
    }
    .project-card:hover {
        border-left-color: #2563eb;
    }
    .badge {
        border-radius: 0;
        @apply px-2 py-1 text-xs font-mono tracking-tight;
    }

    .link-hover {
        @apply text-zinc-900 dark:text-zinc-100 border-b border-transparent hover:border-current transition-all duration-200;
    }

    .section-title {
        @apply text-2xl font-bold tracking-tight;
    }

    .project-image {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
    }

    .project-image.loaded {
        opacity: 1;
    }

    .placeholder {
        transition: opacity 0.3s ease-in-out;
    }

    .placeholder.hidden {
        opacity: 0;
    }
</style>

<script>
    // Handle image loading
    const images = document.querySelectorAll('.project-image');
    images.forEach(img => {
        if (img instanceof HTMLImageElement) {
            if (img.complete) {
                handleImageLoad(img);
            } else {
                img.addEventListener('load', () => handleImageLoad(img));
            }
        }
    });

    function handleImageLoad(img: HTMLImageElement) {
        img.classList.add('loaded');
        const placeholder = img.parentElement?.querySelector('.placeholder');
        if (placeholder) {
            placeholder.classList.add('hidden');
        }
    }
</script> 